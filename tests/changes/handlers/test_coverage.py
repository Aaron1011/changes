import uuid

from cStringIO import StringIO

from changes.models.build import Build
from changes.models.filecoverage import FileCoverage
from changes.handlers.coverage import CoverageHandler

COVERAGE_RESULT_XML = """<?xml version="1.0" ?>
<!DOCTYPE coverage
  SYSTEM 'http://cobertura.sourceforge.net/xml/coverage-03.dtd'>
<coverage branch-rate="0" line-rate="0.4483" timestamp="1375818307337" version="3.6">
    <!-- Generated by coverage.py: http://nedbatchelder.com/code/coverage -->
    <packages>
        <package branch-rate="0" complexity="0" line-rate="0.4483" name="">
            <classes>
                <class branch-rate="0" complexity="0" filename="setup.py" line-rate="0" name="setup">
                    <methods/>
                    <lines>
                        <line hits="0" number="2"/>
                        <line hits="0" number="12"/>
                        <line hits="1" number="13"/>
                        <line hits="1" number="14"/>
                        <line hits="0" number="16"/>
                    </lines>
                </class>
                <class branch-rate="0" complexity="0" filename="src/pytest_phabricator/plugin.py" line-rate="0.1875" name="src/pytest_phabricator/plugin">
                    <methods/>
                    <lines>
                        <line hits="1" number="1"/>
                        <line hits="1" number="2"/>
                        <line hits="1" number="3"/>
                        <line hits="0" number="7"/>
                    </lines>
                </class>
            </classes>
        </package>
    </packages>
</coverage>"""


def test_result_generation():
    build = Build(
        id=uuid.uuid4(),
        project_id=uuid.uuid4(),
    )

    fp = StringIO(COVERAGE_RESULT_XML)

    handler = CoverageHandler(build)
    results = handler.get_coverage(fp)

    assert len(results) == 2

    r1 = results[0]
    assert type(r1) == FileCoverage
    assert r1.build_id == build.id
    assert r1.project_id == build.project_id
    assert r1.filename == 'setup.py'
    assert r1.data == 'NUNNNNNNNNNUCCNU'
    r2 = results[1]
    assert type(r2) == FileCoverage
    assert r2.build_id == build.id
    assert r2.project_id == build.project_id
    assert r2.data == 'CCCNNNU'
